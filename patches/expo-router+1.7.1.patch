diff --git a/node_modules/expo-router/src/LocationProvider.tsx b/node_modules/expo-router/src/LocationProvider.tsx
index b5b569c..cc07531 100644
--- a/node_modules/expo-router/src/LocationProvider.tsx
+++ b/node_modules/expo-router/src/LocationProvider.tsx
@@ -18,6 +18,7 @@ export function getRouteInfoFromState(
   const { path } = getPathFromState(state, false);
   const qualified = getPathFromState(state, true);
   return {
+    unstable_url: path,
     pathname: path.split("?")["0"],
     ...getNormalizedStatePath(qualified),
   };
diff --git a/node_modules/expo-router/src/exports.ts b/node_modules/expo-router/src/exports.ts
index 57fa2ab..d412efd 100644
--- a/node_modules/expo-router/src/exports.ts
+++ b/node_modules/expo-router/src/exports.ts
@@ -4,6 +4,7 @@ import { Navigator, Slot } from "./views/Navigator";
 export { useRouter } from "./link/useRouter";
 export {
   usePathname,
+  useUnstableUrl,
   useLocalSearchParams,
   useSearchParams,
   useSegments,
diff --git a/node_modules/expo-router/src/navigationStore/index.ts b/node_modules/expo-router/src/navigationStore/index.ts
index d3fbea4..c9702f4 100644
--- a/node_modules/expo-router/src/navigationStore/index.ts
+++ b/node_modules/expo-router/src/navigationStore/index.ts
@@ -197,6 +197,10 @@ export function useRouteInfo() {
   return navigationStore.routeInfo;
 }
 
+export function useUnstableUrl() {
+  return useRouteInfo().unstable_url;
+}
+
 export function useSegments() {
   return useRouteInfo().segments;
 }
@@ -218,6 +222,9 @@ export function useLocalSearchParams<
 function useOptionalLocalRoute<T extends RouteProp<ParamListBase>>():
   | T
   | undefined {
+    if (!NavigationRouteContext) {
+      return undefined;
+    }
   const route = React.useContext(NavigationRouteContext);
   return route as T | undefined;
 }
